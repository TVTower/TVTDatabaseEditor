/*
 * generated by Xtext 2.23.0
 */
package org.tvtower.db.ui.wizard


import org.eclipse.xtext.ui.wizard.template.FileTemplate
import org.eclipse.xtext.ui.wizard.template.IFileGenerator
import org.eclipse.xtext.ui.wizard.template.IFileTemplateProvider

/**
 * Create a list with all file templates to be shown in the template new file wizard.
 * 
 * Each template is able to generate one or more files.
 */
class DatabaseFileTemplateProvider implements IFileTemplateProvider {
	override getFileTemplates() {
		#[new HelloWorldFile]
	}
}

@FileTemplate(label="New TVTower database file", icon="file_template.png", description="Create an empty TVTower database file.")
final class HelloWorldFile {
//	val helloName = combo("Hello Name:", #["Xtext", "World", "Foo", "Bar"], "The name to say 'Hello' to")
	val scripts=check("scripts",true)
	val news=check("news",true)
	val programmes=check("programmes",true)
	val celebrity=check("celebrities",false)
	val insignificant=check("other persons",false)

	override generateFiles(IFileGenerator generator) {
		generator.generate('''«folder»/«name».xml''', '''
			<?xml version="1.0" encoding="utf-8"?>
			<tvtdb>
				<version value="3" />
				«IF scripts.value»

					<scripttemplates>
					</scripttemplates>
				«ENDIF»
				«IF news.value»

					<allnews>
					</allnews>
				«ENDIF»
				«IF programmes.value»

					<allprogrammes>
					</allprogrammes>
				«ENDIF»
				«IF celebrity.value»

					<celebritypeople>
					</celebritypeople>
				«ENDIF»
				«IF insignificant.value»

					<insignificantpeople>
					</insignificantpeople>
				«ENDIF»
			</tvtdb>
		''')
	}
}
